pipeline {
    agent any
    environment {
        // Ensure Docker and Maven paths are properly set for Linux
        PATH = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    }
    tools {
        maven 'Maven' // Ensure Maven is installed in Jenkins
    }
    stages {
        stage('Build') {
            steps {
                // Run Maven build to create the WAR file
                sh 'mvn clean package'
            }
        }

        stage('Run Tests') {
            steps {
                sh 'mvn test'
            }

            post {
                always {
                    // Archive the test results
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Teardown') {
            steps {
                script {
                    sh 'docker-compose down'  // Stop and remove containers
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Check if Docker image exists by ensuring non-empty result
                    def imageExists = sh(script: 'docker images -q jee-app-tomcat', returnStdout: true).trim()
                    if (imageExists) {
                        echo "Docker image 'jee-app-tomcat' already exists, skipping build."
                    } else {
                        echo "Building Docker image 'jee-app-tomcat'."
                        sh 'docker build -t jee-app-tomcat .'
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Check if the container is running by ensuring non-empty result
                    def containerRunning = sh(script: 'docker ps -q -f name=jee-app-tomcat', returnStdout: true).trim()
                    if (containerRunning) {
                        echo "Container 'jee-app-tomcat' is already running."
                    } else {
                        // Check if container exists but is stopped, and remove it if so
                        def containerExists = sh(script: 'docker ps -a -q -f name=jee-app-tomcat', returnStdout: true).trim()
                        if (containerExists) {
                            echo "Removing existing stopped container 'jee-app-tomcat'."
                            sh 'docker rm jee-app-tomcat'
                        }
                        echo "Running Docker container 'jee-app-tomcat'."
                        sh 'docker run -d --name jee-app-tomcat -p 9091:9090 jee-app-tomcat'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Assign the custom URL inside a script block
                    def customUrl = "http://localhost:8081/PainCare/acceuil.jsp"
                    echo "Deployment complete. Application should be running at ${customUrl}"
                }
            }
        }
    }

    post {
        always {
            // Clean up the workspace after build
            cleanWs()
        }
    }
}
